# docker-compose.yml

x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  image: custom-airflow:3.0.2
  env_file: .env
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgis/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__DATABASE__LOAD_DEFAULT_CONNECTIONS: 'false'
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
  depends_on:
    postgis:
      condition: service_healthy
  networks:
    - airflow

services:
  postgis:
    image: postgis/postgis:16-3.4  # PostgreSQL 16 with PostGIS 3.4
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgis_data:/var/lib/postgresql/data
    networks:
      - airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  airflow-init:
    <<: *airflow-common
    entrypoint: >
      bash -c "airflow db migrate && airflow users create 
               --username admin 
               --firstname Admin 
               --lastname User 
               --role Admin 
               --email admin@example.com 
               --password admin && 
               airflow db upgrade"
    depends_on:
      postgis:
        condition: service_healthy

  airflow-webserver:
    <<: *airflow-common
    ports:
      - "8080:8080"
    command: webserver
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgis_data:

networks:
  airflow:
